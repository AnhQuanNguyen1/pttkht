DỰ ÁN PHÂN TÍCH THIẾT KẾ HỆ THỐNG

PHẦN 1: GIỚI THIỆU DỰ ÁN
- Tên dự án: Hệ thống quản lý thông tin sinh viên
- Sinh viên thực hiện: Manh.DT211014@sis.hust.edu.vn
- Lớp: ET-E10
- Môn học: Phân tích thiết kế hệ thống thông tin 
1.1 MỤC TIÊU DỰ ÁN
- Xây dựng hệ thống quản lý thông tin sinh viên hiệu quả
- Tự động hóa quy trình quản lý học vụ
- Cung cấp giao diện thân thiện cho người dùng
- Đảm bảo bảo mật thông tin sinh viên

1.2 PHẠM VI DỰ ÁN
- Quản lý thông tin cá nhân sinh viên
- Quản lý điểm số và kết quả học tập
- Quản lý học phí và công nợ
- Hệ thống báo cáo và thống kê
- Giao diện web responsive


PHẦN 2: PHÂN TÍCH YÊU CẦU

2.1 YÊU CẦU CHỨC NĂNG
- Đăng nhập/đăng xuất hệ thống
- Quản lý thông tin sinh viên (CRUD)
- Nhập và cập nhật điểm số
- Tính toán GPA tự động
- Tìm kiếm và lọc thông tin
 
2.2 YÊU CẦU PHI CHỨC NĂNG
- Hiệu suất: Phản hồi dưới 2 giây
- Bảo mật: Mã hóa dữ liệu nhạy cảm
- Khả năng mở rộng: Hỗ trợ 1000+ người dùng
- Tính sẵn sàng: Uptime 99.9%
- Giao diện: Responsive trên mọi thiết bị

2.3 USE CASE DIAGRAM
- Actor: Admin, Giáo viên, Sinh viên
- Use cases chính:
  + Quản lý thông tin sinh viên
  + Nhập điểm
  + Xem kết quả học tập
  + Quản lý học phí
  + Tạo báo cáo



PHẦN 3: THIẾT KẾ HỆ THỐNG

3.1 KIẾN TRÚC HỆ THỐNG
- Kiến trúc 3 lớp (3-tier architecture)
- Presentation Layer: React.js
- Business Logic Layer: Node.js/Express
- Data Access Layer: MySQL
- Kiến trúc MVC pattern

3.2 THIẾT KẾ CƠ SỞ DỮ LIỆU
- Bảng Students: id, name, email, phone, address
- Bảng Courses: id, name, credits, description
- Bảng Enrollments: student_id, course_id, grade, semester
- Bảng Users: id, username, password, role
- Bảng Payments: id, student_id, amount, date, status

3.3 THIẾT KẾ GIAO DIỆN
- Trang đăng nhập: Simple và secure
- Dashboard: Tổng quan thông tin
- Trang quản lý sinh viên: CRUD operations
- Trang nhập điểm: Form validation
- Trang báo cáo: Charts và tables
- Mobile responsive design



PHẦN 4: TRIỂN KHAI

4.1 CÔNG NGHỆ SỬ DỤNG
- Frontend: React.js, HTML5, CSS3, Bootstrap
- Backend: Node.js, Express.js
- Database: MySQL
- Authentication: JWT
- Deployment: Docker, AWS EC2

4.2 CẤU TRÚC CODE
- Frontend/
  + src/components/
  + src/pages/
  + src/services/
  + src/utils/
- Backend/
  + controllers/
  + models/
  + routes/
  + middleware/
  + config/

4.3 TESTING
- Unit Testing: Jest cho React components
- Integration Testing: API endpoints
- Performance Testing: Load testing
- Security Testing: Vulnerability scan
- User Acceptance Testing: Manual testing

4.4 BẢO MẬT
- Password hashing với bcrypt
- JWT token authentication
- Input validation và sanitization
- SQL injection prevention
- XSS protection
- HTTPS encryption

4.5 TỐI ƯU HIỆU SUẤT
- Database indexing
- Query optimization
- Caching với Redis
- Image compression
- Code splitting
- Lazy loading components
